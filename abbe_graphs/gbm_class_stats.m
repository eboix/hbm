import block_model.classifiers.*;

try
load('gbm_stats_data.mat');
catch
    warning('COULD NOT FIND GBM_STATS_DATA.mat. OVERWRITING.');
end

% graphpowtemp_adj = @(x) pow_adj_classifier(x,'clean_c',2, 'pow_c',0.15);

classifiers = ...
    { ...
          {@pow_lap_classifier, 'lap (no clean)','no_clean',true,'pow_c',0},... 
          {@pow_lap_classifier, 'lap (clean 1)','clean_c',1,'pow_c',0},... 
      {@pow_lap_classifier, 'lap (clean 2)','clean_c',2,'pow_c',0},... 
      {@pow_lap_classifier, 'lap (clean 3)','clean_c',3,'pow_c',0},...
            {@pow_sym_norm_lap_classifier, 'normlap (no clean)', 'no_clean',true,'pow_c',0},... 
     {@pow_sym_norm_lap_classifier, 'normlap (clean 1)','clean_c',1,'pow_c',0},... 
      {@pow_sym_norm_lap_classifier, 'normlap (clean 2)','clean_c',2,'pow_c',0},... 
      {@pow_sym_norm_lap_classifier, 'normlap (clean 3)','clean_c',3,'pow_c',0},... 
    {@optimal_gbm_classifier, 'best possible'}};
%    {@pow_lap_classifier, 'pow (lap) none 0', 'no_clean',true,'pow_c',0},... 
%     {@pow_lap_classifier, 'pow (lap) none 0.15','no_clean',true,'pow_c',0.15},... 
%     {@pow_lap_classifier, 'pow (lap) none 0.3','no_clean',true,'pow_c',0.3},...
%     {@pow_sym_norm_lap_classifier, 'graphpow (norm lap) none 0', 'no_clean',true,'pow_c',0},... 
%     {@pow_sym_norm_lap_classifier, 'graphpow (norm lap) 2 0.15', 'clean_c',2,'pow_c',0.15},... 
%     {@pow_sym_norm_lap_classifier, 'graphpow (norm lap) 2 0.3','clean_c',2,'pow_c',0.3}, ...
%     {@pow_sym_norm_lap_classifier, 'graphpow (norm lap) 2 0.5', 'clean_c',2,'pow_c',0.5}, ...
 %  {@nb_classifier, 'nb'}, ...
  %  {@adj_classifier, 'adj'}, ...
  %  {@lap_classifier, 'lap'}, ...
  %  {@sdp_classifier, 'sdp'}, ...
  %  {@sym_norm_lap_classifier, 'normlap'}, ...
%      {@pow_adj_classifier, 'pow (adj) none 0','no_clean',true,'pow_c',0},... 
%      {@pow_adj_classifier, 'pow (adj) none 0.15','no_clean',true,'pow_c',0.15},... 
%      {@pow_adj_classifier, 'pow (adj) none 0.3','no_clean',true,'pow_c',0.3}, ...
%      {@pow_adj_classifier, 'pow (adj) none 0.5','no_clean',true,'pow_c',0.5}, ...
     % {@pow_adj_classifier, 'pow (adj) none 1','no_clean',true,'pow_c',1}, ...
     % {@pow_adj_classifier, 'pow (adj) none 2','no_clean',true,'pow_c',2}, ...
    %  ...
     % {@pow_lap_classifier, 'pow (lap) none 0.5','no_clean',true,'pow_c',0.5}, ...
     % {@pow_lap_classifier, 'pow (lap) none 1','no_clean',true,'pow_c',1}, ...
     % {@pow_lap_classifier, 'pow (lap) none 2','no_clean',true,'pow_c',2}, ...
     %      ...
     %      {@pow_sym_norm_lap_classifier, 'graphpow (norm lap) 2 1','clean_c',2,'pow_c',1}, ...
%      {@pow_sym_norm_lap_classifier, 'graphpow (norm lap) 2 2','clean_c',2,'pow_c',2}, ...
%      ...
%      {@pow_randwalk_classifier, 'graphpow (randwalk) 2 0.15', 'clean_c',2,'pow_c',0.15},... 
%      {@pow_randwalk_classifier, 'graphpow (randwalk) 2 0.3','clean_c',2,'pow_c',0.3}, ...
%      {@pow_randwalk_classifier, 'graphpow (randwalk) 2 0.5', 'clean_c',2,'pow_c',0.5}, ...
%      {@pow_randwalk_classifier, 'graphpow (randwalk) 2 1','clean_c',2,'pow_c',1}, ...
%      {@pow_randwalk_classifier, 'graphpow (randwalk) 2 2','clean_c',2,'pow_c',2}, ...
%      ...
%      {@pow_nb_classifier, 'graphpow (nb) 2 0.15', 'clean_c',2,'pow_c',0.15},... 
%      {@pow_nb_classifier, 'graphpow (nb) 2 0.3','clean_c',2,'pow_c',0.3}, ...
%      {@pow_nb_classifier, 'graphpow (nb) 2 0.5', 'clean_c',2,'pow_c',0.5}, ...
%      {@pow_nb_classifier, 'graphpow (nb) 2 1','clean_c',2,'pow_c',1}, ...
%      {@pow_nb_classifier, 'graphpow (nb) 2 2','clean_c',2,'pow_c',2}, ...
%      {@pow_lap_classifier, 'lap (no clean)', 'no_clean',true,'pow_c',0},... 
%      {@pow_lap_classifier, 'lap (clean 1)','clean_c',1,'pow_c',0},... 
%      {@pow_lap_classifier, 'lap (clean 2)','clean_c',2,'pow_c',0},... 
%      {@pow_lap_classifier, 'lap (clean 3)','clean_c',3,'pow_c',0},...
%      ...
%      {@pow_nb_classifier, 'nb (no clean)', 'no_clean',true,'pow_c',0},... 
%      {@pow_nb_classifier, 'nb (clean 1)','clean_c',1,'pow_c',0},... 
%      {@pow_nb_classifier, 'nb (clean 2)','clean_c',2,'pow_c',0},... 
%      {@pow_nb_classifier, 'nb (clean 3)','clean_c',3,'pow_c',0},...
%         {@pow_sym_norm_adj_classifier, 'normadj (no clean, pow 0.15)','no_clean',true,'pow_c',0.15},...
%         {@pow_sym_norm_adj_classifier, 'normadj (1 clean, pow 0.15)','clean_c',1,'pow_c',0.15},...
%         {@pow_sym_norm_adj_classifier, 'normadj (1 clean, no pow)','clean_c',1,'pow_c',0},...
%     ...
%      {@pow_sym_norm_lap_classifier, 'normlap (no clean)', 'no_clean',true,'pow_c',0},... 
%     {@pow_sym_norm_lap_classifier, 'normlap (clean 1)','clean_c',1,'pow_c',0},... 
%      {@pow_sym_norm_lap_classifier, 'normlap (clean 2)','clean_c',2,'pow_c',0},... 
%      {@pow_sym_norm_lap_classifier, 'normlap (clean 3)','clean_c',3,'pow_c',0},... 

n_vals = [100:200:1000 2000:2000:10000 20000:20000:100000 200000];
num_trials = 50;

if ~exist('gbm_stats_data', 'var')
    gbm_stats_data = table({},{},{},{},{},{});
    gbm_stats_data.Properties.VariableNames = {'class_name', 'thresh_c', 'center_dist', 'n', 'giant_agreement','time_elapsed'};
end

for TIMEOUT = 1:200
    
    for c = 10
        for d = 1:1:3
            for classi = 1:length(classifiers)
                class_cell = classifiers{classi};
                class_func = class_cell{1};
                class_name = class_cell{2}
                class_vals = ones(length(n_vals),num_trials)*nan;
                
                for ni = 1:length(n_vals)
                    n = n_vals(ni);
                    [in_table,time_elapsed] = check_if_in_gbm_stats_data(gbm_stats_data,class_name,c,d,n);
                    if in_table
                        if time_elapsed > TIMEOUT
                            break;
                        end
                        continue;
                    end
                    n
                    tic
                    try
                        agreements = agree_vals_gbm(class_func,c,d,n,num_trials,class_cell{3:end});
                    catch err
                        disp(err)
                        warning(['Error in ' class_name 'code']);
                        
                        time_elapsed = toc;
                        if time_elapsed > TIMEOUT, break; end
                        continue
                    end
                    time_elapsed = toc;
                    
                    temptable = table({class_name},c,d,n,agreements,time_elapsed);
                    temptable.Properties.VariableNames = gbm_stats_data.Properties.VariableNames;
                    gbm_stats_data = [gbm_stats_data;temptable]; %#ok<AGROW>
                    
                    save_stats_file = 'gbm_stats_data.mat';
                    if exist(save_stats_file,'file')
                        delete(save_stats_file);
                    end
                    save(save_stats_file,'gbm_stats_data');
                    if time_elapsed > TIMEOUT
                        break
                    end
                    
                end
                
            end
        end
    end
end
